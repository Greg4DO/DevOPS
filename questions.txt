wi-fi: KmdsdTgfv
vm on 2012r2

AWS
1.EC2
User name	Administrator
Password	e.7fKrXbMx	Kg7cYQx35X	&jW;JS552y


1. updates 1 в три дня в 15-00. ставить но не перегружать. ставить c mydomain.com
2. в чем разница между full и modify permissions.
	full - доступ c возможностью изменять права и правила аудита к папкам и файлам
3. calc.exe зарегить как сервис и запустить от отличного от local system пользователя. (sc in PS)
	sc create CalcService Displayname="CalcService" binpath="C:\Windows\system32\calc.exe"
4. почему мало сделать export registry.
	пропадают права
5. как востановить права на ветку CurrentControlSet
	backup: subInACL /noverbose /output=C:\T\Software.txt /subkeyreg HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet /display=sddl
	restore: subInACL /playfile C:\T\Software.txt

kernel mode -> services
user mode -> programs


AD objects: Ресурси, служби, облікові записи
Forest, Tree





2 DCs + ports currpot

user1 user2
group1 group2

user1 - group1, users
user2- group2, rdusers, users

200 MB new disk copy C:\Work to disk D with permissions

термін дії паролю 3 дні
disable enforce password
rdp лишити але доступу нема


C:\Work\ file1 file2
file1 - user1
file2 -user2




53, 80, 88, 135, 389, 636
53.88.123

load balancing also used like port forwarding


new user in domain
start calc run as from new user

change data by duser
runas /user:devopslabs\duser "control C:\Windows\System32\timedate.cpl"
time 14:00

install IIS

bindings: IP, Name, Port


new FTP site
1 local 1domain user folders
upload and download files



FTP Site 2 users 1domain 1local
2 web site 1site from local 1 from domain user
html calc.exe
C:TempLocal C:TempDomain
Security for site
2 app  ploos from Network Service account
upload from dc


!!!Conditional forwarders
Zone (google.com) -> DNS who knows where (8.8.8.8)

Delegation control
DNS Server who can manage my Zone



begin tran t1;
select * from table;
update table set id=33 where name=alan;
commit/rollback;


Create login, create db, create table (id,name,value)
insert 20000 random entries
Set db maxsize 20 Mb
Set CP1252 collation on instance

Додати ключ в реєстрі через cmd
REG ADD HKLM\Software\MyCo
REG ADD HKLM\Software\MyCo /v Data /t REG_BINARY /d fe340ead
REG ADD HKLM\Software\MyCo /v MRU /t REG_MULTI_SZ /d fax\0mail\0\0
REG ADD HKLM\Software\MyCo /v Path /t REG_EXPAND_SZ /d ^%systemroot^%
REG DELETE HKLM\Software\MyCo


ODBC

HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\





DevOps 
Developer - Build - Test - Deploy - Client
Build - Test - Deploy -> DevOps
Operations - internal (кухня)
Service - external (офіціант)
CI/CD (Continous Integration, Continous Delivery/Deployment)
CI - зібрати збірку (збілдати), відтестувати
CDeployment - впровадження оновлень в мінімальний час простою сервісу.
CDelivery - всі ці елементи впроваджувати в мінімальний час максимально автоматизовано.
CM (Configuration Management) - HardWare (System Administration), virtualization, cloud, Orchestration(tools for virtualization (Chef, Puppet, Ansible, Vagrant)), Automation.

chroot - юзер не зможе вийте вище директорією

File System
/tmp - sticky bit, чиститься після ребуту - temporary files
/etc - config files
/bin - user binaries
/sbin - system binaries
/dev - device files
/proc - proccess information, можна напряму звертатись до процесів, єдиний шлях відновити щойно вбитий файл
/var - variable files
/usr - user programs
/home - home dirictories
/boot - boot loader files
/lib - system libraries
/opt - otional add-ons
/mnt- mount directory
/media - removable devices
/srv - service data
/sys - несконфігуровані пристрої

File types
file, directory, link, charachter device, block device, sockets, pipline
inodes - вся інформація про файли, ім’я знаходиться в каталозі.
soft link - може посилатись на зовнішню файлову систему, можна посилатись на каталог, нічого не говорить про атрибути оригінального файлу і його права.
hard link - друге ім’я файлу, не мапиться на каталог чи на зовнішній девайс
block device - disks, network (напряму звертатись не можем)
charachter device - dev/tti, dev/con, dev/zero, dev/urandom, 
Перехід між блочним пристроєм і файлом - команда dd
pipeline - канали вводу/виводу даних (stdout/stdin)
socket - програмний канал, в основному використовується для мереж //xinetd (запуск програми по зверненню до порта)

SSH
Remote console (on server install sshd, credentials, shell, port) /etc/passwd
Remote copy (scp, rsync) (scp /tmp/test copy to user@host:/dir)
Remote execution (ssh user@host "command")
Port forwarding (local port forward to remote port) (ssh reverse proxy)
Tunneling пов’язано з PF
Authorization mechanism (паролями, ключами) public key - замок, secret - ключ, passphrase - шифрування ключа паролем; утиліта ssh-keygen; з secret можна відновити public; (локально треба мати каталог /home/user/.ssh з правами 500, всередині файл id_rsa з правами 400) ; ssh -vvvv
Ready for subsystems  
config file /etc/ssh/ssh.config


home task: install Vagrant(репозиторій VagrantBox, також є на GitHub), install Centos_64 on virtualbox, install Ansible, create knowledge base (KB) in cloud, GitHub, putty
Згенерувати ключ і підключитись ним по ssh
Файл /home/user/.ssh/Authorized keys

man ssh
w - connections to host

Vbox vagrant - Ubuntu, CentOS
AWS - Ubuntu(ssh port 22055)
Access to AWS Ubuntu from Vbox via ssh
on Vbox ssh port forwarding to AWS; from Internet connect to AWS and forward to Vbox


vagrant status
vagrant ssh

reverse channel:
remote to server
cat .ssh/id_rsa.pub >> .ssh/authorized_keys
ssh root@localhost //test is it possible
ssh -D 8899 root@localhost //dynamicaly port forward (comes from any port to 8899)
ssh root@server
ssh 5555:localhost:8899 root@server //

Check Sylinux on CentOS

User information in /etc/passwd
/etc/shadow
/etc/groups
пароль групи потрібен для того щоб комусь дати, щоб він зміг додати ще людей в групу
usermod -aG
id

Permissions on folders
execute (1) - only enter folder, you can get file in that folder only if you know its name
read and execute (3) - enter folder and list files
read write execute (7) - enter folder list files write files, couldn't delete this folder; you can delete this folder only from parent permissions

Permissions on files
make executable files with execution bit
if copy executable file from remote system it drop executable on local system

umask -утиліта яка регулює права по дефолту
для файлу від 666 віднімається якесь значення (666-033=644) побітово!!!!
для папки від 777 віднімається якесь значення (777-033=744) побітово!!!!

0444
0 - 3 біти suid sgid sticky
suid - в момент запуску програми, програма набуває прав власника файла (тільки для executables файлів); passwd - власник root права 755, цій програмі треба записати в shadow. При запуску від звичайного юзера далі passwd виконується з-під root.
sgid - в момент запуску програми, програма набуває прав власника групи (для папок)
sticky - ставиться на файли, видалити які може тільки власник. Наприклад каталог tmp

Утиліта ACL при загрузці файлової системи

useradd usermod userdel
userdel -rf (видаляються і юзер і home і пошта)

su login (login as root)
sudo command (run command as root)
visudo - sudo config file

mkdir /tmp/xxx
cd !$
result: cd /tmp/xxx

history
!номер_команди (!35)

в bashrc можна дописати в history час

ctrl+U delete left part of command
ctrl+K delete right part of comand

hometask:
створити користувача з папкою і файлами
різниця між r і rx
дати sguid 
написати програму cat /etc/shadow > /tmp/test/1.txt
1.txt - suid permissions
test - sguid permissions


== HOMETASK LESSON 2 ==
SSH port forward:
1. Buld SSH-tunel using Local port forward:  You should create connection from your local system to AWS instance and make socks-proxy on it using  dynamic port forward. (Note, thank you should run ssh twice)

sudo ssh -L 123:localhost:22 ubuntu@ec2-52-36-100-89.us-west-2.compute.amazonaws.com -i "./.ssh/AWS_key1.pem"

2. Build SSH-tunel using Remote port forward: You should create connection from AWS instance to your local VM which have only outgoing access allowed.

On local VM: ssh -i "id_rsa" ubuntu@ec2-52-36-100-89.us-west-2.compute.amazonaws.com -R 22055:localhost:22

7. Install and try "screen" terminal multiplexor ( yum install screen)
screen -S TOP
top
Ctrl+a+d
screen -ls
screen -r TOP (single user)
screen -x TOP (multiple users)

== HOMETASK LESSON 3 ==
3. How to pass password to sudo
echo <password> | sudo -S <command>

В sudoers можна прописати програму з якою може працювати користувач. (Програмідати root).
Якщо дати перед командою пробіл вона не запишеться в history.
history -c 140 видаляє 140 рядок з history.
passwd -d видаляє пароль користувачу.


DIRECTORY NAVIGATING

./ current dir
~/ home dir
/ root
../ parent dir
$0 де запущена програма
cd  go to home dir
cd- previos dir
pushd кидає в стек поточний каталог
popd переходить в поточний каталог

FILE MANAGEMENT

ls
find купа ключів (/ як далеко шукати; test фільтр; report ; -delete видаляє те що знайшло; -exec запускає команду знайденого файлу)
grep
locate шукає по буферу

cp
mv
rm
cp && rm
ключі -R(рекурсивно) -f(force) -i

rsync утиліта для копіювання каталогів/прав
rsync -e 'ssh' (може працювати через ssh на external системі)
rsync -av
rsync src/ dst not the same as src dst

touch створити файл
sed
mkdir
file виводить інфо про файл
stat виводить статистику про файл
basename виводить ім'я файлу
dirname виводить ім'я папки
realpath якщо треба добратись до файлу за лінком

chown зміна власника
chmod зміна прав
chmod 755 or chmod u+x (ugoa xrw)

md5sum * контрольна сума всіх файлів в поточному каталозі
md5sum >sum.txt
md5sum -c sum.txt порівнює файл з сумами у файлі sum.txt

diff порівняння файлів звичайних
cmp порівняння файлів бінарних

всі команди мають exit коди (&& якщо exit код 0; || якщо exit код не 0)

cat -A виводить всі недруковані символи

head n - перші n стрічок з файлу
tail n - останні n стрічок з файлу
tail -f - на екрані виводить дописування в файл

grep
	-i ігнорить casesensitive
	-v інверсія (виводить все крім того що зазначено)
	-A after
	-B before
	-R шукає по структурі директорій
	-o повертає тільки входження (ocurance)

'' строгі
"" нестрогі

ls -la | grep '^d' шукає всі файли що починаються на d
	      '$d'		      закінчується на d

.*
.+
.?
[0-9][a-z][A-Z] [A-Za-z0-9]


sed редактор який редагує файли на льоту зі скриптів
cat file | sed 's/що міняти/на що поміняти/g' де g всі входження, якщо без g то перше входження
можна замість / використовувати будь-який символ після s

awk редактор як sed але заточений на поля (таблиці)

cut ріже стрічку по полям
cut d, -f (d деліметром є кома)
коли деліметр є пробіл: cut d\  -f

tr 'що поміняти' 'на що поміняти'
tr -d 'що видалити'
tr -dc 'що залишити'
tr -s ' ' видаляє входження більше одного пробіла

sort - сортує файл
uniq - видає значення скільки було входжень
cat ufw.log | sed -e 's/SRC=/~/' -e 's/ DST=/~'|cut -d~ -f2 |sort -n|uniq -c| sort -nr -k1,8|head -30

hometask
вивести користувачів які не мають пароля
з якого адреса конектились
скільки типів файлів в системі
скільки файлів з нульовим об'ємом
скільки проців в системі і скіль в кожного потоків
змодифікувати файл hosts (дописати), перевірити чи вже існує


File Systems/Disks

fdisk -l показує підмонтовані диски в системі
LVM ріже логічний диск на піддиски для видачі їх віртуальним машинам
parted - утиліта розбивки дисків якщо диск більше 1 Тб?
parted -print показує підмонтовані диски в системі

cat /boot/grub/grub.cfg
/etc/fstab	/etc/mtab - всі змонтовані девайси
mount -l
mount -t v_fat /dev/sdf /mnt/usb
mount -t iso9600 /dev/cd /mnt/cd-rom
df-h
cat /proc/cpuinfo інфа про процесор в файловій системі proc
fsck - утиліта чекання і виправлення диску (не можна запускати на примонтованій файловій системі)
fsck -n перевіряє але не виправляє
mkfs - створює файлову систему
NFS - можна примонтувати файлову систему з мережі
по ssh також можна примонтувати ФС
posix
glusterfs - надбудова над стандартними ext2 ext3 (робить RAID з дисків на різних машинах)
ext3 відрізняється від ext2 тим що ext3 - журнальована файлова система
dd - копіювання фізичних дисків
dd if=/path/to/input of=/path/to/output
rsync - копіює тільки нові або змінені файли
диск віртуальної машини можна підмонтувати як readonly

systemd - первинний процес
 https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/chap-Managing_Services_with_systemd.html

процесу можна подати сигнал
kill -n де n - сигнал [1-15]
-9 витирає все з пам'яті
-15 нормальне завершення (нові підключення заборонені, чекає завершення існуючих підключень)

top
ps тільки процеси поточного юзера
ps -aux всі процеси
ps -aux | grep sshd | grep vagrant | grep -v root | xagrs kill -9
lsof всі відкриті файли(якщо треба дізнатися який файл відкрив процес)
послати в бекграунд
vi tmp.txt &
повернути з бекграунду (якщо один процес)
fg
якщо багато процесів
jobs повертає список процесів в бекграунді

w - залоговані юзери в системі
watch 'command' - обновляє результат вказаної команди кожні 2 секунди
watch 'w'

loop device - Коли треба підмонтувати файл як диск

LVM
pv - phisical volume (не sda а sda1)
vg - volume group 
lv - logical volume (LUN)
LVM have snapshots
If phisical disk bad, add new PV, then PV move from bad to new, then remove bad phisical disk.

hdparm -tT /dev/sda1 перевірка швидкості диска
time <program> скільки часу треба було на запуск проги, скільки вона відпрацьовувала, коли завершилась

hometask:
1.losetup: dd flash disk to img. losetup img and mount as disk.


NETWORK

OSI Model
1. Phisical (код Морзе)
2. Data Link (зв'язок по MAC-адресам; роутери)
3. Network (протоколи IP, ICMP)
arp - коли девайс питає хто має таку IP, хтось кже я і ця IP відповідаю такому MAC.
           xxx.xxx.xxx.xxx
                  |  
network addresses | host addresses
4. Transport (TCP,UDP)
5. Session (встановлення сесії; SSL(перевірка сертифікату),RPC,SQL,NFS,NetBIOS)
6. Presentation (Syntax layer; SSL (шифрування каналу))
7. Application(User Applications)

1.
lshw      |
lsusb     |
lspci     | фізичні пристрої системи
dmidecode |
iwlist    |

2.
iwconfig утиліта конфігурування wi-fi карти
ethtool утиліта міняє параметри мережевої карти
arp (наприклад для тестування роботи DHCP) дозволяє визначити MAC-адресу машин
arpping

3.
ping
traceroute
ttl скільки хостів може пройти пакет, перед тим як вмерти
mtu розмір пакету

4.
iproute (ifconfig, netstat, ...)
iproute2 (ip, ss, ts) ip a всі інтерфейси на машині; ip r всі роути на машині
ip address
ip route
netstat є нова ss
ss -anal
ss -nlp
ts обмежує швидкість на інтерфейсі


FIREWALL
Stateless and Statefull firewalls
iptables statefull firewall
inbound,outbaont, and forward packets
Ebtables has three tables: filter, nat, broute
Chains - набір правил в таблицях
В таблиці filter є 3 стандартних чейна: INPUT, OUTPUT, FORWARD

Дуже спрощено приклад правила:
iptables -t filter

iptables -A INPUT -p tcp -s 1.2.3.4 -j DROP
iptables -A INPUT -p tcp -s 1.2.3.0/24 -j ACCEPT
iptables -A INPUT -p tcp -port 80 -j ACCEPT
iptables -A INPUT -p tcp -port 22 -j ACCEPT
iptables -A INPUT -p tcp -j DROP

iptables -S зберігає всі нові правила

Щоб дозволити доступ всередині машини
iptables -A INPUT -o lo -j ACCEPT

iptables -P Якщо пакет не підпав під жодне правило
iptables -P INPUT -j DROP

-I (як -A) вставляє правило в перший рядок

iptables -L Подивитись всі правила
iptables -L -n -v Кількість пакетів по правилам

В убунті є свій врапер для фаєрвола UFW

ufw status подивитись всі правила

Правила NAT обробляються перед правилами FILTER
DNAT в таблиці PREROUTING
SNAT в таблиці POSTROUTING
MASQUARADE в таблиці POSTROUTING

Щоб дозволити FORWARD пакетів В /etc/sysctl.conf увімкнути net.ipv4.ip_forward=1

hometask:
командою ір підняти логічний інтерфейс на фізичному
man ip
iptables
підняти на двух машинах внутрішню мережу. одна роутер з двома інтерфейсами, сконфіжити SNAT, сконфіжити пакет форвард, сконфіжити фаєрвол, інтерфейс зовнішній - брідж. з другої машини ходити в інтернет через першу.
eth0 External network eth1 Local network
sudo sysctl -w net.ipv4.ip_forward=1
sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
sudo iptables -A FORWARD -i eth0 -o eth1 -m state --state RELATED,ESTABLISHED -j ACCEPT
sudo iptables -A FORWARD -i eth1 -o eth0 -j ACCEPT

tcpdump 
telnet
nc host port && echo OK


SCRIPTING

Перенаправлення і конвеєрезація
Дискриптори вводу і виводу
stdin (0) stdout (1) stderr (2)

Як вивести тільки помилки, коли ми шукаємо в рут-директорії:
find / 1>/dev/null

Помилки в один файл, добре в другий:
ls -la /var/lib/* 2>/tmp/err 1>/tmp/ok

du 2>/dev/null | sort -nr -kl,8 | head -30

Перенаправити все &>
duv &>/dev/null

Щоб направити задачу в бекграунд, після команди писати &
find / 2>/dev/null &

показати останню команду:
!!

Щоб ловити коди відпрацювання команд
&&
Якщо команда виконалась з кодом 0 то вивести ОК
ping 8.8.8.8 && echo OK


Щоб в одній стрічці вказати дві команди ;
echo A ; echo B
cp a b ; rm a

Якщо код не 0 ||
ping 8.8.8.8 && echo OK || echo NO

Підстановка змінної:
HOST=8.8.8.8 ; ping ${HOST} && echo OK || echo NO

Все що поміститься в () виконається як в окремому шеллі
echo "$(date -R)" >> /tmp/test.txt ; cat /tmp/test.txt ; ls -la /tmp/te*

Включити відладчик
set -x

Виключити відладчик
set +x

echo "$(ls /tmp/$(echo t)*)"

mkdir /tmp/$(date +%Y)

Перевірка чи є директорія
[ -d /tmp/$(date +%Y) ] && echo Y || mkdir /tmp/$(date +%Y)

man test

Якщо в команді вказати -p помилка не видасться

Як створити 100 папок
mkdir /tmp/{1..100}

for host in 192.168.1.{1..100} ; do ping $host && echo $host-UP || echo $host-DOWN

Обрахунок
echo $((2+5))

Завжди мувати старі файли перед оновленням!
Не використовувати cd.. ! Юзати pushd popd.
Не писати rm -rf $zminna, якщо вона не присвоється повидаляє не те.
find -typef ! -name *.sh видалити все крім файлів з розширенням sh.

$? exit code останньої команди
$0 
$1

read замість sleep

pwd=read -s запитує пароль у користувача

PROGRAMM INSTALLATION


.deb	dpkg	apt	Debian
.rpm	rpm	yum	CentOS

Встановлюється в sys\	bin
			lib
			conf
			scripts/triggers
В pkg DB записуються dependencies

apt or yum | install | remove | purge(Debian) erase (CentOS)

Щоб зібрати пакет встановити deb tools

Якщо встановлювали плагіни на прогу з сорсів, наступний апдейт накриє плагіни.
Два вирішення: в конфігах заборонити апдейт проги; зносити прогу і встановлювати її теж з сорсів.


CRON
anacron всі таски які не виконались коли машина була вимкнена, виконаються після старту

inotify Дивиться за змінами в каталогах чи файлах, і робить те що скажеш



TROUBLESHOOTING


set -x
set +x

Ставити echo в скрипти щоб воно писало як відпрацьовує скрипт в файл

перед запуском деплою:
uptime
free -m
df -h ; df -I
ps axfu
iostat навантаження дискової підсистеми
hdparm
vmstat
netstat -a
ip link
hdparm

як добавити своп:
swapfile fs=1M
mkswap swapfile
swapon swapfile

strace my_app аналізує що підгрузилось куди полізло


home task:
підняти дві чисті машини CentOS Ubuntu. На амазоні підняти сервіс, доступитись з локальної машини. 
eth0 External network eth1 Local network
sudo sysctl -w net.ipv4.ip_forward=1
sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
sudo iptables -A FORWARD -i eth0 -o eth1 -m state --state RELATED,ESTABLISHED -j ACCEPT
sudo iptables -A FORWARD -i eth1 -o eth0 -j ACCEPT

Написати скрипт, з циклом і аналізом exit коду.
for host in {100..110} ; do ping -c 1 192.168.0.$host >/dev/null && echo 192.168.0.$host UP || echo 192.168.0.$host DOWN ; done

підмонтувати диск.
sudo fdisk /dev/sdb
N (New partition)
p (primary)
w (write and quit)
sudo fdisk -l
sudo mkfs -t ext4 /dev/sdb1
ls -la /dev/disk/by-uuid
sudo vi /etc/fstab
UUID=e0ade976-ec34-43ba-8c8f-a04492f2d641 /newdisk ext4 defaults 1 2
sudo mkdir /newdisk
sudo mount /dev/sdb1 /newdisk

створити демон.
/etc/system.d/system/create_file
systemctl status create_file
screen -L -dm bash -c "node server.js"

Основні утиліти лінукса busybox



SSH port forward:
1. Buld SSH-tunel using Local port forward:  You should create connection from your local system to AWS instance and make socks-proxy on it using  dynamic port forward. (Note, thank you should run ssh twice)

sudo ssh -L 123:localhost:22 ubuntu@ec2-52-36-100-89.us-west-2.compute.amazonaws.com -i "./.ssh/AWS_key1.pem"

2. Build SSH-tunel using Remote port forward: You should create connection from AWS instance to your local VM which have only outgoing access allowed.

On local VM: ssh -i "id_rsa" ubuntu@ec2-52-36-100-89.us-west-2.compute.amazonaws.com -R 22055:localhost:22



LINUX SERVICES

Internet
1. DNS
2. http(s)
3. SMTP
4. SSH (SFTP)
5. NTP

Local net
1. DHCP
2. SNMP
3. ICMP
4. NTP
5. VLAN


DNS

Спочатку все зберігалось в /etc/hosts
TLD - Top Level Domain (.com .net .org etc)
Піддомени (ukr.net)
Кожен домен обслуговує свій DNS сервер
Пошук www.ukr.net - спочатку в /etc/hosts, потім в DNS cache (кожен успішний запит кладеться в кеш з ttl, якщо ttl не сплив, то видається результат), потім в DNS даної зони (там також 1. кеш 2. own zone), якщо не знайшов то йде на TLD (йде на домен net, далі в ukr.et, далі в www.ukr.net), якщо знайшов відповідь йде на перший DNS.
dig -t ANY www.ukr.net +trace - утиліта для аналізу куди йдуть DNS-запити
nslookup
host www.ukr.net 8.8.8.8 - перевірка через конкретний dns
dig -x 8.8.8.8
whois IP - вся інфа про провайдера
whois FQDN - вся інфа про реєстратора імен

DNS records
A - A record
AAAA - ipv6
MX - mail server
NS - name server
SOA - start of authority ()
CNAME - alias
PTR - pointer in reverse DNS
SRV - і ім"я і порт на якому працює сервіс
TXT - в цей запит вставляють public ключ

Одна назва сервера і кілька ІР (Round Robin)


HTTP(S)

Запити head, get, post, update, delete, connect.

Apache
Ubuntu - apache2
CentOS - httpd

apache
Перевіаги:
1. Модульна структуру (modules enabled)
2. Multi thread
3. Має прописані конектори до всього

Недоліки:
1. Дуже важкий

nginx
Переваги:
1. event proc
2. light
3. Може працювати як proxy
4. Може кешувати контент і віддавати напряму

Недоліки:
1. Не має модульної структури.
2. В разі кастомізації треба перезбирати з сорсів.

nodejs
Написаний на java script
npm - node packet manager
nvm - node version manager

Least loaded (Load balancing з перевіркою хто менш нагружений (менше конектів передано); але сесія може рватись) 
ip
Sticky session ()

SSL
1. Чи хост який/куди конектиться є тим за кого себе видає
2. шифрування трафіку

openssl - утиліта має весь набір по шифруванню
keytool - openssl для java


SMTP

MTA - Mail Transfer Agent
sendmail
postfix
exim


NTP

port 123
ntpq - ntp query


Home task:
Inet - nginx (reverse proxy + log + virtual host + certificate) - apache на AWS
Подивитись як настроїти кешування на nginx
1. підняти DNS, з зоною .test, forward 8.8.8.8
2. 2 virtual hosts apache1.test apache2.test
3. Підключити цей DNS собі на ПК


AWS


Iaas - infrastructure as a service (Virtual Director, EC2)
PaaS - platform as a service (LAMP, java)
SaaS - software as a service
CaaS - container as a service
IaaC - infrastructure as a code (DevOPS)

Cloud defenition NIS

Services- Security - IAM
Create User for CLI, also could create Auth ID and pass for GUI.
MFA with Google authentificator

how to install aws.cli
start working with aws cli:aws configure

Home task:
Install AWS cli

sudo apt install awscli
aws configure

Install EC2 server through AWS CLI

aws ec2 run-instances --image-id ami-8936e0e9 --count 1 --instance-type t2.micro --key-name AWS_key1 --security-groups awscli-sg

Install EC2 server through AWS Cloud Formation
Create Cloud Formation template

Design template
or
Create stack - Choose a template - Select a sample template - sample templates - solution templates - Services - Amazon EC2


CONTAINERS


Аплікації, бібліотеки, які можуть стартувати в одному namespace - cgroup.
Файлова система на основі btrfs (btreefs?)

Контейнер: спільне ядро ОС, в контейнері свої аплікухи, і ліби, контрейнери можуть спілкуватися файлами: data volume ; ця DIR буде на рівні ядра ОС.
Всі аплікухи в контейнерах повинні працювати на різних портах, оскільки ОС спільна від хоста.

docker ps - всі запущені контейнери
docker run ubuntu
docker run ubuntu /bin/echo 'Hi from docker'
docker run -t -i ubuntu /bin/bash
exit - закриває контейнер
docker kill container_id
docker run -d ubuntu /bin/sh -c "while true;echo Hello world;sleep1;done"
docker logs container_id
cd /home/greg/sshdocker
docker build -t eg_sshd .
docker run -d -P --name test_sshd eg_sshd

consul.io/intro
github: consul/demo/vagrant-cluster/Vagrantfile

HomeTask:
WordPress on Docker
k2QtA-BQMi%n7UueWd


GIT


Repository (Project)
	src
	conf
	test
Всі зміни що вносяться в проект - commit
Після нього проект набуває певних якостей
Кожен commit знає хто він, хто був до нього, хто стоїть після нього.
Head - останній commit
Branch - своя гілка проекту
master - основна гілка проекту
Merge - об'єднання бренча і хеда
Checkout - встати на будь-який комміт і якщо захочемо комітити, треба створити свій бренч.
Reset - Видалення комміту
Revert - commit0 - commit+ - commit- - commit0
Rebase - схоже на merge, але переносить всі комміти хронологічно, з іншої гілки, в нашу гілку, не втрачаючи історії своїх комітів.
Charepick
Origin - центральний репозиторій
З центральним репозиторієм є такі операції:
pull - тягнемо центр репозиторій собі
push - кладем свій head на центральний репозиторій
pull request - коли просиш Delivery Manager'а перевірити і запушити твій код

gitready.com
ndpsoftware.com/git-cheatsheet.html
wei-wang.com/ExplainGitWithD3

git clone
git status
git branch -a показує всі бренчі

Home task:


cd Git/
mkdir sko-lv
cd sko-lv/
git init
git remote add origin https://github.com/sko-lv/test.git
git pull origin master
git branch my_branch
git branch
git checkout my_branch
git branch
*some changes*
git status
git commit -m "Text"    #or git commit -a
git status
git log
git push -u origin my_branch
git request-pull c2d81305 origin my_branch -p

111

